타자연습게임 

시작 로직
<문제준비>
텍스트파일 읽어서 배열or리스트에 담기(리스트추천)
<게임시작>
점수 0점으로 기회는 10번으로 초기화
<문제 출제>
반복문 남은 기회 만큼 >> 
반복문(남은기회 > 0)
{
	문제.txt = List[난수]
	progressbar1 = 100
}
ReadLine한줄한줄 와일문 돌면서 한줄 List.Add
배열크기만큼 난수 발생시켜 랜덤으로 출력
뽑힌 문장을 label4에 출력 label4.text = List[4]

아이콘 만드는법
png to ico 검색

윈폼 코딩 프로세스

1. 화면 폼 디자인

2. TabIndex 설정. 0으로

3. 컨트롤명 바꾸기 (접두어 3글자 + 의미) >>가 일반적인 네이밍
---------------------코딩 시작------------------------------------
4. 폼이 화면에 보일때 어떤 상태였으면 좋겠는지 생각 ( 생성자, Form Load이벤트)
						>> 보통 Load이벤트에 구현
>>>>>>>>>>>>>>>>>>이벤트 위주 코딩 <<<<<<<<<<<<<<<<<<<<<<<<



빈폼 아무데나 더블클릭하면 기본 이벤트 핸들러가 등록 되고 Form Load코딩 
Load이벤트는 폼이 켜질때 딱한번 일어남 

상태가 변하지 않을때만 속성으로 바꾸고
상태가 변하는것은 코딩으로 꾸며야함

파일 읽기쓰기
1. 절대경로 말고 상대경로로 하는게 좋다
     >>1. 폴더를 추가하고 파일을 폴더에 넣는다
         2. 폴더에 넣은 파일의 속성에서 <출력 디렉토리에 복사> 를 항상 복사로 바꿔준다
         3. 그럼 bin/Debug폴더에 빌드시에 

텍스트 박스

Enable 속성
ReadOnly 속성
  : 둘다 입력이 안됨, Enable은 포커스도 가지않고 회색으로 변함

ImeMode 속성 
  : 입력모드 설정 , 자판의 입력모드를 설정해주는 속성

텍스트 박스 이벤트

TextChanged 이벤트
 : 텍스트박스에 문자가 바뀌었을시 실행되는 이벤트

KeyPress 이벤트
 : 키를 눌렀을때 발생하는 이벤트
  KeyPress는 아스키코드로 표현할수 없는건 못함
  타자연습게임처럼 단순히 키가 눌렷냐 안눌렸냐 따질때는 KeyPress도 깔끔하게 쓸수있다
>>KeyDown은 유니코드라 더 많은걸 할수있음
    KeyDown은 ctrl , shift, alt 등 복합키도 가능
    단축키 복합키 등을 쓸때는 KeyDown이 맞음( ex. 게임등 복잡한 키를 눌러야할때)
